#include "WeaponBase.h"
#include <iostream>

// --------------------------------------------------------
//	WeaponBaseクラス（ソースファイル）
//	 武器の基底クラス
//	 AttackMainメンバ関数を派生クラスでオーバーライドして使用する
// --------------------------------------------------------
///////////////////////////////////////////////////////////
//	コンストラクタ
//	 引数:
//		name … 武器の名称
//		hp	 … 武器の耐久値
//	 内容:
//		武器の名称の代入と耐久値の代入を行う
///////////////////////////////////////////////////////////
WeaponBase::WeaponBase(const char* name, int hp) :
	NAME(name),
	hp_(hp)
{
	std::cout << "WeaponBaseクラスのコンストラクタが呼ばれました" << std::endl;

}

///////////////////////////////////////////////////////////
//	デストラクタ
//	 内容:
//		呼ばれたことを確認するための文言を出力
///////////////////////////////////////////////////////////
WeaponBase::~WeaponBase()
{
	std::cout << "WeaponBaseクラスのデストラクタが呼ばれました" << std::endl;
}

///////////////////////////////////////////////////////////
//	Show関数
//	 戻り値:
//		なし
//	 引数:
//		なし
//	 内容:
//		武器の名称と攻撃力、耐久値を出力
///////////////////////////////////////////////////////////
void WeaponBase::Show() const
{
	std::cout << "名称:   " << NAME			 << std::endl
			  << "攻撃力: " << attack_value_	 << std::endl
			  << "耐久値: " << hp_			 << std::endl;
}

///////////////////////////////////////////////////////////
//	Attack関数
//	 戻り値:
//		ダメージ量
//	 引数:
//		なし
//	 内容:
//		攻撃を行う
//		耐久値が0以下の場合は、攻撃失敗のメッセージを出力し、
//		ダメージ量として0を返す
//		それ以外の場合は、派生クラスでオーバーライドされた、
//		AttackMain関数を使用する
//		最後にこの攻撃で与えたダメージ量(damage_value_)を返す
///////////////////////////////////////////////////////////
int WeaponBase::Attack()
{
	std::cout << "----------------------------------------------" << std::endl;
	if (hp_ <= 0)
	{
		MissAttack();
		return 0;
	}
	AttackMain();
	std::cout << "----------------------------------------------" << std::endl;
	std::cout << std::endl;

	// 耐久値を減らす
	--hp_;
	return damage_value_;
}

///////////////////////////////////////////////////////////
//	MissAttack関数
//	 戻り値:
//		なし
//	 引数:
//		なし
//	 内容:
//		攻撃失敗のメッセージを出力
///////////////////////////////////////////////////////////
void WeaponBase::MissAttack() const
{
	std::cout << "耐久値が0のため、攻撃できませんでした..." << std::endl;
	std::cout << std::endl;

}
